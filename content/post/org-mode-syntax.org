#+TITLE: Org-mode Syntax Guide
#+DATE: 2020-01-01T07:51:20-08:00
#+AUTHOR: Hugo Authors
#+DESCRIPTION: Sample article showcasing Org syntax and formatting.
#+TAGS[]: org css html themes
#+CATEGORIES[]: themes syntax
#+SERIES[]: "Themes Guide"
#+IMAGES[]:
#+VIDEOS[]:
#+AUDIO[]:
#+DRAFT: false
#+STARTUP: showall

This article offers a sample of basic Org syntax that can be used
in Hugo content files, also it shows whether basic HTML elements are
decorated with CSS in a Hugo theme.

** Headings
   :PROPERTIES:
   :CUSTOM_ID: headings
   :END:

The following HTML =<h1>=---=<h6>= elements represent six levels of
section headings. =<h1>= is the highest section level while =<h6>= is
the lowest.

* H1
  :PROPERTIES:
  :CUSTOM_ID: h1
  :END:

** H2
   :PROPERTIES:
   :CUSTOM_ID: h2
   :END:

*** H3
    :PROPERTIES:
    :CUSTOM_ID: h3
    :END:

**** H4
     :PROPERTIES:
     :CUSTOM_ID: h4
     :END:

***** H5
      :PROPERTIES:
      :CUSTOM_ID: h5
      :END:

****** H6
       :PROPERTIES:
       :CUSTOM_ID: h6
       :END:

** Paragraph
   :PROPERTIES:
   :CUSTOM_ID: paragraph
   :END:

Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum,
voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate
ma dolestendit peritin re plis aut quas inctum laceat est volestemque
commosa as cus endigna tectur, offic to cor sequas etum rerum idem
sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus
ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique
molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem
erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea
ipsamus es exerum sitate dolores editium rerore eost, temped molorro
ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.

Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ
idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.

** Blockquotes
   :PROPERTIES:
   :CUSTOM_ID: blockquotes
   :END:

The blockquote element represents content that is quoted from another
source, optionally with a citation which must be within a =footer= or
=cite= element, and optionally with in-line changes such as annotations
and abbreviations.

**** Blockquote without attribution
     :PROPERTIES:
     :CUSTOM_ID: blockquote-without-attribution
     :END:

#+BEGIN_QUOTE
  Tiam, ad mint andaepu dandae nostion secatur sequo quae. *Note* that
  you can use /Org syntax/ within a blockquote.
#+END_QUOTE

**** Blockquote with attribution
     :PROPERTIES:
     :CUSTOM_ID: blockquote-with-attribution
     :END:

#+BEGIN_QUOTE
  Don't communicate by sharing memory, share memory by communicating.
  --- Rob Pike[fn:1]
#+END_QUOTE

** Tables
   :PROPERTIES:
   :CUSTOM_ID: tables
   :END:

Beautiful book like tables.


| Name    | Age   |
|---------+-------|
| Bob     | 27    |
| Alice   | 23    |

**** Inline Org within tables
     :PROPERTIES:
     :CUSTOM_ID: inline-org-within-tables
     :END:

| Inline      | Org      | In                   | Table    |
|-------------+---------------+----------------------+----------|
| /italics/   | *bold*        | +strikethrough+      | =code=   |
#+TBLFM:

** Code Blocks
   :PROPERTIES:
   :CUSTOM_ID: code-blocks
   :END:

**** Source block displaying HTML
:PROPERTIES:
     :CUSTOM_ID: source-block-displaying-html
     :END:

#+BEGIN_SRC html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Example HTML5 Document</title>
</head>
<body>
  <p>Test</p>
</body>
</html>
#+END_SRC

**** Source block displaying Elisp
:PROPERTIES:
:CUSTOM_ID: source-block-displaying-elisp
:END:

#+BEGIN_SRC emacs-lisp
(defun mccarthy91 (n)
   "McCarthy 91 is used as a formal verification test case."
   (if (<= n 100)
       (mccarthy91 (mccarthy91 (+ n 11)))
     (- n 10)))
#+END_SRC

**** Source block with C from NetBSD

#+begin_src C
#define	KSTACK_MAGIC	0xdeadbeaf

/* XXX should be per process basis? */
static int	kstackleftmin = KSTACK_SIZE;
static int	kstackleftthres = KSTACK_SIZE / 8;

void
kstack_setup_magic(const struct lwp *l)
{
	uint32_t *ip;
	uint32_t const *end;

	KASSERT(l != NULL);
	KASSERT(l != &lwp0);

	/*
	 * fill all the stack with magic number
	 * so that later modification on it can be detected.
	 */
	ip = (uint32_t *)KSTACK_LOWEST_ADDR(l);
	end = (uint32_t *)((char *)KSTACK_LOWEST_ADDR(l) + KSTACK_SIZE);
	for (; ip < end; ip++) {
		*ip = KSTACK_MAGIC;
	}
}
#+end_src


**** More C from NetBSD
#+begin_src C
/*
 * kthread_fpu_enter()
 *
 *	Allow the current lwp, which must be a kthread, to use the FPU.
 *	Return a cookie that must be passed to kthread_fpu_exit when
 *	done.  Must be used only in thread context.  Recursive -- you
 *	can call kthread_fpu_enter several times in a row as long as
 *	you pass the cookies in reverse order to kthread_fpu_exit.
 */
int
kthread_fpu_enter(void)
{
	struct lwp *l = curlwp;
	int s;

	KASSERTMSG(!cpu_intr_p(),
	    "%s is not allowed in interrupt context", __func__);
	KASSERTMSG(!cpu_softintr_p(),
	    "%s is not allowed in interrupt context", __func__);

	/*
	 * Remember whether this thread already had FPU access, and
	 * mark this thread as having FPU access.
	 */
	lwp_lock(l);
	KASSERTMSG(l->l_flag & LW_SYSTEM,
	    "%s is allowed only in kthreads", __func__);
	s = l->l_flag & LW_SYSTEM_FPU;
	l->l_flag |= LW_SYSTEM_FPU;
	lwp_unlock(l);

	/* Take MD steps to enable the FPU if necessary.  */
	if (s == 0)
		kthread_fpu_enter_md();

	return s;
}
#+end_src

** Other blocks

**** Example block
     :PROPERTIES:
     :CUSTOM_ID: example-block
     :END:

#+begin_example
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Example HTML5 Document</title>
</head>
<body>
  <p>Test</p>
</body>
</html>
#+end_example

**** Code block with Hugo's internal highlight shortcode
     :PROPERTIES:
     :CUSTOM_ID: code-block-with-hugos-internal-highlight-shortcode
     :END:

{{< highlight html >}}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Example HTML5 Document</title>
</head>
<body>
  <p>Test</p>
</body>
</html>
{{< /highlight >}}

** List Types
   :PROPERTIES:
   :CUSTOM_ID: list-types
   :END:

**** Ordered List
     :PROPERTIES:
     :CUSTOM_ID: ordered-list
     :END:

1. First item
2. Second item
3. Third item

**** Unordered List
     :PROPERTIES:
     :CUSTOM_ID: unordered-list
     :END:

- List item
- Another item
- And another item

**** Nested list
     :PROPERTIES:
     :CUSTOM_ID: nested-list
     :END:

- Item A

  1. First Sub-item
  2. Second Sub-item

- Item B

  1. Sub-item one
  2. Sub-item two

     - Sub-sub-item A
     - Sub-sub-item B
     - Sub-sub-item C

** Other Elements --- abbr, sub, sup, kbd, mark
   :PROPERTIES:
   :CUSTOM_ID: other-elements-abbr-sub-sup-kbd-mark
   :END:


#+BEGIN_EXPORT html
<p><abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap
image format.</p>
#+END_EXPORT

H_{2}O

X^{n} + Y^{n} = Z^{n}

#+BEGIN_EXPORT html
<p>Press <kbd>CTRL</kbd> + <kbd>ALT</kbd> + <kbd>Delete</kbd> to end
the session.</p>
#+END_EXPORT

Most salamanders are nocturnal, and hunt for insects, worms, and other
small creatures.

[fn:1] The above quote is excerpted from Rob Pike's [[https://www.youtube.com/watch?v=PAAkCSZUG1c][talk]] during
       Gopherfest, November 18, 2015.
